###
### Sample Agent configuration
###

#### Presto Manager configuration ###################################

# Besides the properties below, Presto Manager recognizes
# `node.id`, which determines an Agent's unique identifier.
# If not set, the node ID will be set to a random value.

# The name of the environment Presto Manager will run in.
node.environment      = test

# Determines the port on which the agent will listen for API calls.
http-server.http.port = 8081

# File to configure which log levels will be used.
log.levels-file       = etc/log.properties

# The URL at which the Controller may be found.
# This should use the same port as the Controller
# configuration file's http-server.http.port property.
discovery.uri         = http://localhost:8088

# What type of Presto isntallation is being managed.
# Valid values: rpm, tarball
packaging             = rpm

# These properties determine where Presto Manager will look for
# default onfiguration and connector files for a new Presto
# installation. If these directories are not present, hard-coded
# defaults will be used.
# To create an installation with no configuration, create these
# directories and leave them empty.
defaults.config-dir   = defaults/config
defaults.catalog-dir  = defaults/catalog

# These limit the number of seconds a subprocess may run for.
# `.long` limits time-consuming processes such as Presto
# installation, while `.short` is used for faster processes,
# such as checking whether Presto is running.
subprocess-timeout-seconds.long = 120
subprocess-timeout-seconds.short = 60

# A regular expression used to match log entries to allow advanced
# log filtering operations. At this time, the named capturing groups
# "date" and "level" are used by the application to determine when
# a log entry was made and at what log level. These groups must be
# present in the regular expression.
log-entry.pattern = ^(?<date>[0-9]{4}-[0-9]{2}-[0-9]{2}\
  T[0-9]{2}:[0-9]{2}:[0-9]{2}(\\.[0-9]{3})?[+-][0-9]{4})\
  \t(?<level>[A-Z]+)\t(?<thread>[^\t]+)\t(?<class>[^\t]+)\
  \t(?<message>.*)$

# If the first line of a log file does not match `log-entry.pattern`,
# this value will be prepended to the first log entry.
# The value of `log-entry.default` must match `log-entry.pattern`.
log-entry.default = 0000-01-01T00:00:00.000+0000\
  \tALL\t[none]\t[none]\tThis log entry was not preceded by a header:


### Additional configuration

# Set the HTTP request log file with "http-server.log.path = FILE"
# Disable the HTTP request log with "http-server.log.enabled = false"
# For further HTTP server configuration, see the
# source for`io.airlift.http.server.HttpServerConfig`.

# Set the log file with "log.output-file = FILE"
# Disable logging with "log.enable-console = false"
# For further log configuration, see the source
# for`io.airlift.log.LoggingConfiguration`.

# For further node configuration, see the
# source for `io.airlift.node.NodeConfig`.


#### Presto Information #############################################

# These configuration properties tell Presto Manager where to look
# for Presto's files.

presto.config-dir     = /etc/presto
presto.catalog-dir    = /etc/presto/catalog
presto.data-dir       = /var/lib/presto/presto/data
presto.plugin-dir     = /usr/lib/presto/lib/plugin
presto.log-dir        = /var/log/presto
presto.launcher       = /usr/lib/presto/bin/launcher
